2018-03-07

https://www.binarization.com/archive/2016/markdown-syntax/
http://wowubuntu.com/markdown/
--------------------------------------------------------------------------------
引言

    Markdown 的目标是实现「易读易写」

    一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。

    Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。

    它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。

    HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。
特殊字符自动转换

    在 HTML 文件中，有两个字符需要特殊处理： < 和 & 。 < 符号用于起始标签，& 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 &lt; 和 &amp;。
    Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 & 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 &amp;。

    所以你如果要在文档中插入一个版权符号 ©，你可以这样写：

    &copy;

    Markdown 会保留它不动。而若你写：

    AT&T

    Markdown 就会将它转为：

    AT&amp;T

    不过需要注意的是，code 范围内，不论是行内还是区块， < 和 & 两个符号都一定会被转换成 HTML 实体，

区块
    段落和换行 <p>
        一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。
        如果你确实想要依赖 Markdown 来插入 <br /> 标签的话，在插入处先按入两个以上的空格然后回车。

    标题  <h1> .. <h6>

        Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。

        类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：

        This is an H1
        =============

        This is an H2
        -------------

        任何数量的 = 和 - 都可以有效果。

        类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：

        # 这是 H1

        ## 这是 H2

        ###### 这是 H6

        你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 #，而行尾的 # 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：

        # 这是 H1 #

        ## 这是 H2 ##

    区块引用 Blockquotes

        自己先断好行，然后在每行的最前面加上 > ：

        > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
        > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
        > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

        Markdown 也允许你偷懒只在整个段落的第一行最前面加上 >

        区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 > ：

        > This is the first level of quoting.
        >
        > > This is nested blockquote.
        >
        > Back to the first level.

        引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：

    列表 <ul>, <ol>, <li>

        Markdown 支持有序列表和无序列表。

        无序列表使用星号、加号或是减号作为列表标记.

        有序列表则使用数字接着一个英文句点.
        很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果.
        重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。
        列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。

        要让列表看起来更漂亮，你可以把内容用固定的缩进整理好

        如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <p> 标签包起来

        列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符

        如果要在列表项目内放进引用，那 > 就需要缩进

        *   A list item with a blockquote:

        > This is a blockquote
        > inside a list item.

        如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符
        当然，项目列表很可能会不小心产生，像是下面这样的写法：

        1986. What a great season.

        换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。

        1986\. What a great season.

    代码区块 <pre><code>

        要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以.
        一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）
        代码区中,每行都会被移除一阶的缩进（4 个空格或是 1 个制表符）.

        Here is an example of AppleScript:

        tell application "Foo"
            beep
        end tell

        会被转换为：

        <p>Here is an example of AppleScript:</p>

        < pre><code>tell application "Foo"
            beep
        end tell
        </code></pre>


        在代码区块里面， & 、 < 和 > 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，

        代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。

    分隔线(Horizontal Rules)

        你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线.
        你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：

        * * *

        ***

        *****

        - - -

        ---------------------------------------

区段元素
    链接

        Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。

        要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号(或圆括号)把 title 文字包起来即可，例如：

        This is [an example](http://example.com/ "Title") inline link.
        This is [an example](http://example.com/ (Title)) inline link.

        [This link](http://example.net/) has no title attribute.

        引用式的链接(Reference-style links)是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：

        This is [an example][id] reference-style link.

        在文件的任意处，你可以把这个标记的链接内容定义出来：

        [id]: http://example.com/  "Optional Title Here"

        链接内容定义的形式为：

            方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字
            接着一个冒号
            接着一个以上的空格或制表符
            接着链接的网址
            选择性地接着 title 内容，可以用单引号、双引号或是括弧包着

        链接网址也可以用尖括号包起来：

        [id]: <http://example.com/>  "Optional Title Here"

        你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：

        [id]: http://example.com/longish/path/to/resource/here
            "Optional Title Here"

        网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。

        链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写

        隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 "Google" 链接到 google.com，你可以简化成：

        [Google][]

        然后定义链接内容：

        [Google]: http://google.com/


        参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。

        使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。

    强调

        Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，被 * 或 _ 包围的字词会被转成用 <em> 标签包围，用两个 * 或 _ 包起来的话，则会被转成 <strong>，例如：
        *single asterisks*
         _single underscores_
         **double asterisks**
         __double underscores__
        强调也可以直接插在文字中间：

        un*frigging*believable

        但是如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。

        如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：

    代码

        如果要标记一小段行内代码，你可以用反引号把它包起来（`）
        如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：
        ``There is a literal backtick (`) here.``
        行内代码段内若含有`,用\转义是行不通的.

        代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个

        & 和尖括号都会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易

    图片

        很明显 语法来插入图片是有一定难度的。

        Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。
        语法,在普通链接的前面加上!就好了.

        ![Alt text](/path/to/img.jpg)

        ![Alt text](/path/to/img.jpg "Optional title")


        ![Alt text][id]

        「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：

        [id]: url/to/image  "Optional title attribute"

        到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <img> 标签。
其它
    自动链接

        Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：

        <http://example.com/>

        Markdown 会转为：

        <a href="http://example.com/">http://example.com/</a>

        邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：

        <address@example.com>

        Markdown 会转成：

        <a href="&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;
        &#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;
        &#109;">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;
        &#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>

        在浏览器里面，这段字串（其实是 <a href="mailto:address@example.com">address@example.com</a>）会变成一个可以点击的「address@example.com」链接。
    反斜杠

        Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <em> 标签），你可以在星号的前面加上反斜杠：

        \*literal asterisks\*

        Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：

        \   反斜线
        `   反引号
        *   星号
        _   底线
        {}  花括号
        []  方括号
        ()  括弧
        #   井字号
        +   加号
        -   减号
        .   英文句点
        !   惊叹号
